services:
  rdb:
    container_name: s3dmap_rdb
    hostname: s3dmap_rdb
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./rdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "${POSTGRES_PORT_EXPOSE}:${POSTGRES_PORT}"
    restart: unless-stopped
  
  ingestor:
    container_name: s3dmap_ingestor
    hostname: s3dmap_ingestor
    build:
      context: ./ingestor
      dockerfile: Dockerfile
    environment:
      PG_HOST: ${POSTGRES_HOST}
      PG_PORT: ${POSTGRES_PORT}
      PG_DBNAME: ${POSTGRES_DB}
      PG_USER: ${POSTGRES_USER}
      PG_PASSWORD: ${POSTGRES_PASSWORD}
      USER_INPUT_DIR: ${USER_INPUT_DIR}
      CHUNK_SIZE: ${CHUNK_SIZE}
      MAX_CHUNKS: ${MAX_CHUNKS}
      PREFIXES_MATERIALIZED_VIEW: ${PREFIXES_MATERIALIZED_VIEW}
      INVENTORY_FLATTEN_MATERIALIZED_VIEW: ${INVENTORY_FLATTEN_MATERIALIZED_VIEW}
    volumes:
      - user_input_data:${USER_INPUT_DIR}
    working_dir: /app
    command: python ingestor.py
    depends_on:
      rdb:
        condition: service_healthy
    restart: no

  app:
    container_name: s3dmap_app
    hostname: s3dmap_app
    build:
      context: ./app
      dockerfile: Dockerfile
    environment:
      PG_HOST: ${POSTGRES_HOST}
      PG_PORT: ${POSTGRES_PORT}
      PG_DBNAME: ${POSTGRES_DB}
      PG_USER: ${POSTGRES_USER}
      PG_PASSWORD: ${POSTGRES_PASSWORD}
      PREFIXES_MATERIALIZED_VIEW: ${PREFIXES_MATERIALIZED_VIEW}
      PREFIXES_DEMO_TABLE: ${PREFIXES_DEMO_TABLE}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    working_dir: /app
    command: python s3dmap.py
    depends_on:
      rdb:
        condition: service_healthy
      ingestor:
        condition: service_completed_successfully
    restart: unless-stopped

volumes:
  postgres_data:
  user_input_data:
      driver: local
      driver_opts:
        o: bind
        type: none
        device: ./user_input_data